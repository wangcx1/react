Sass：2007年诞生，最早也是最成熟的css预处理器，拥有ruby社区的支持和compress这一最强大的css框架，目前受LESS影响，已经进化到了全面兼容css的scss。
Less：2009年出现，受SASS的影响比较大，但又使用CSS的语法，让大部分开发者和设计师更容易上手，在ruby社区之外支持者远超过SASS，其缺点是比起SASS来，可编程功能不够，不过优点是简单和兼容css，发过来也影响了SASS演变到了scss的时代。
Stylus：2010年产生，来自Node.js社区，主要用来给Node项目进行css预处理支持，在此社区之内有一定的支持者，在广泛的意义上人气还完全不如sass和less。
sass和scss的差别
sass需要安装ruby。sass有三种使用方式：命令行工具、独立的Ruby模块、以及包含Ruby on Rails 和Merb作为支持Rack的框架的插件。
scss是一个css3语法的扩充版本，也就是说，所有符合css3语法的样式表也都是具有相同语法意义的scss可以在css中直接使用。
Sass有两种语法，分别以[*.sass]和[*.scss]为扩展名。Sass兼容css，你可以在sass文件里写css，也可以严格按照sass的缩进省去[大括号]和[分号]，最终他们都会被编译成标准css。
Less：Less受Sass的影响非常大，以[*.less]为扩展名，是sass之后的又一款优秀的css预处理器。其特点包括：
    1、变量：就像写其他语言一样，免于多处修改。
    2、混合：class之间的轻松引入和继承
    3、嵌套：选择器之间的嵌套使你的less非常简洁。
    4、函数&运算：就像JS一样，对less变量的操控更灵活
Stylus:相比于sass的激进和less的常规，Stylus是一个高效、动态以及丰富的css预处理器。它同时支持缩进的和通俗的两种风格的css语法风格。
Stylus扩展名为[*.styl]，跟另外两款css预处理器相比略显年轻，社区以及推广程度也不及sass和less。
1、变量：
Sass声明变量必须是$开头，后面紧跟变量名和变量值，而且变量名和变量值需要使用冒号：分隔开。
Less声明变量用@开通，其余等同Sass
Stylus中声明变量没有任何限定，结尾的分号可有可无，但变量名和变量值之间必须要有等号。但需要注意的是，如果用“@”符号来声明变量，Stylus会进行编译，但不会赋值给变量。就是说，Stylus不要使用@声明变量。Stylus调用变量的方法和Less、Sass完全相同。
2、作用域：
css预编译器把变量赋予作用域，也就是存在生命周期，就像JS一样，他会先从局部作用域查找变量，依次向上级作用域查找。
Sass：三者最差，不存在全局变量的概念，也就是说在Sass中定义了相同名字的变量你要小心了
Less：我认为跟JS一样，逐级查找，向上冒泡。
Stylus：完全等同Less。Stylus和Sass则更倾向于指令式。
3、嵌套：
三种css预编译器的[选择器嵌套]在使用上来说没有任何区别。Sass除了常规的采用[&]替代父级选择器之外，还提供了[奇葩的属性嵌套]
.footer {
  font: {
    family:  微软雅黑;
    size: 5rem;
    weight: bolder;
  }
}
4、继承
css属性的继承是一个非常重要的特性
Sass和Stylus的继承非常像。能把一个选择器的所有样式继承到另一个选择器上。使用[@extend]开始，后面接被继承的选择器。
Less继承：与前两者继承方式有所区别，它不是在选择器上继承，而是将Minxins中的样式嵌套到每个选择器里面。然而这样会带来一个明显的缺点：每个选择器中都会出现重复的样式。
5、导入@Import
CSS中，不建议用@import导入css，因为会增加http请求。但css预处理器中的导入和css中有很大区别，它是将不同css是在语义上导入，最终编译结果会生成一个css文件。
Vue：
1、请说下具体使用vue的理解？
使用vue不必担心布局更改和类名重复导致的js重写，因为它是靠数据驱动双向绑定，底层是通过Object.defineProperty()定义的数据set、get函数原理实现。
组件化开发，让项目的可扩展性。移植性更好，代码重用性更高。
单页应用的体验零距离接触安卓原生应用，局部组件更新界面，让用户体验更快速省时。
JS的代码无形的规范，团队合作开发代码可阅读性更高。
2、哪些项目适合vue框架？
数据信息量比较多，反之类似企业网站就无需此框架了。
手机web和APP应用端公用一套界面的项目，因为使用vue-cli+webpack后的前端目录，非常有利于项目的跨平台部署。
3、什么是vue的生命周期？
Vue实例从创建到销毁的过程就是生命周期。也就是从开始创建、初始化数据、编译模板、挂载DOM---渲染、更新---渲染、卸载等一系列过程，我们称这是vue的生命周期。
4、vue生命周期总共有几个阶段？
总共氛围8个阶段：创建前/后，更新前/后，销毁前/后。
5、active-class是哪个组件的属性？嵌套路由怎么定义？
vue-router模块的router-link组件。
6、怎么定义vue-router的动态路由？怎么获取传过来的动态参数？
